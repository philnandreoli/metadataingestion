{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mtcchimoderndwdf001d"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileStorage1'"
		},
		"azure_sql_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azure_sql_db'"
		},
		"metadata_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'metadata_db'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://andrdatalake001d.dfs.core.windows.net"
		},
		"azure_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{concat('https://', linkedService().keyVaultName, '.vault.azure.net')}"
		},
		"data_lake_storage_account_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://', linkedService().storageAccountName, '.dfs.core.windows.net')}"
		},
		"rest_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseURL}"
		},
		"aws_s3_storage_properties_typeProperties_accessKeyId": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "azure_key_vault",
					"type": "LinkedServiceReference",
					"parameters": {
						"keyVaultName": {
							"value": "@linkedService().keyVaultName",
							"type": "Expression"
						}
					}
				},
				"secretName": {
					"value": "@linkedService().keyVaultS3AccessId",
					"type": "Expression"
				},
				"secretVersion": ""
			}
		},
		"azure_file_storage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@{linkedService().keyVaultSecretName}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "files"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"keyVaultName": {
						"type": "string",
						"defaultValue": "andrmoderdwkv001d"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('azure_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"serverFQDN": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('azure_sql_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_lake_storage_account')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('data_lake_storage_account_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('metadata_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseURL": {
						"type": "string",
						"defaultValue": "https://atlas.microsoft.com/"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('rest_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_lake_store_object')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": {
							"value": "@dataset().storageAccountName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					},
					"containerName": {
						"type": "string",
						"defaultValue": "bronze"
					},
					"directory": {
						"type": "string",
						"defaultValue": "southridge/cloudsales/addresses"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "addresses.snappy.parquet"
					},
					"extractionDate": {
						"type": "string",
						"defaultValue": "2021-06-22"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().directory, '/extraction-date=', formatDateTime(dataset().extractionDate, 'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_lake_store_object_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": {
							"value": "@dataset().storageAccountName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					},
					"containerName": {
						"type": "string",
						"defaultValue": "bronze"
					},
					"directory": {
						"type": "string",
						"defaultValue": "weather/"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "weather.json"
					},
					"extractionDate": {
						"type": "string",
						"defaultValue": "2021-08-25"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(utcnow(), '-', dataset().fileName)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().directory, '/extraction-date=', formatDateTime(dataset().extractionDate, 'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azure_sql_db",
					"type": "LinkedServiceReference",
					"parameters": {
						"databaseName": {
							"value": "@dataset().databaseName",
							"type": "Expression"
						},
						"serverFQDN": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "etl"
					},
					"objectName": {
						"type": "string",
						"defaultValue": "customers"
					},
					"databaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"serverName": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"folder": {
					"name": "source objects/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().objectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_objects_to_extract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "metadata_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata objects"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/metadata_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_api",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseURL": {
							"value": "@dataset().baseURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"baseURL": {
						"type": "string",
						"defaultValue": "https://atlas.microsoft.com/"
					},
					"relativeURL": {
						"type": "string",
						"defaultValue": "weather/currentConditions/json?subscription-key=8lSTicMGFukVS5LUfCG_8Ivq7q08YlGj5DBUZhC2nec&api-version=1.0&query=42.148735, -87.995445"
					}
				},
				"folder": {
					"name": "source objects"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeURL",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aws_s3_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"keyVaultName": {
						"type": "string",
						"defaultValue": "andrmoderdwkv001d"
					},
					"keyVaultS3AccessId": {
						"type": "string",
						"defaultValue": "s3accesskeyid"
					},
					"keyVaultS3AccessKey": {
						"type": "string",
						"defaultValue": "s3accesskey"
					}
				},
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('aws_s3_storage_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azure_key_vault",
							"type": "LinkedServiceReference",
							"parameters": {
								"keyVaultName": {
									"value": "@linkedService().keyVaultName",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().keyVaultS3AccessKey",
							"type": "Expression"
						},
						"secretVersion": ""
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_file_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"keyVaultSecretName": {
						"type": "String",
						"defaultValue": "andronpremfilesystem001d"
					},
					"fileShare": {
						"type": "String",
						"defaultValue": "files"
					}
				},
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azure_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "[parameters('azure_file_storage_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					},
					"fileShare": "@{linkedService().fileShare}"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure-sql-data-ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Azure SQL Tables To Extract",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[metadata].[GET_SOURCE_DESTINATION_OBJECTS]",
								"storedProcedureParameters": {
									"SERVER_DATABASE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sourceDatabaseName",
											"type": "Expression"
										}
									},
									"SERVER_FQDN": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sourceServerFQDN",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "metadata_objects_to_extract",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Through Each Object To Process",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Azure SQL Tables To Extract",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Azure SQL Tables To Extract').output.value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy Source Data To ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"metadata": [
													{
														"name": "SILVER_STORAGE_ACCOUNT_NAME",
														"value": {
															"value": "@item().SILVER_STORAGE_ACCOUNT_NAME",
															"type": "Expression"
														}
													},
													{
														"name": "SILVER_CONTAINER_NAME",
														"value": {
															"value": "@item().SILVER_CONTAINER_NAME",
															"type": "Expression"
														}
													},
													{
														"name": "SILVER_DIRECTORY",
														"value": {
															"value": "@item().SILVER_DIRECTORY",
															"type": "Expression"
														}
													},
													{
														"name": "SILVER_LOAD_TYPE",
														"value": {
															"value": "@item().SILVER_LOAD_TYPE",
															"type": "Expression"
														}
													},
													{
														"name": "GOLD_STORAGE_ACCOUNT_NAME",
														"value": {
															"value": "@item().GOLD_STORAGE_ACCOUNT_NAME",
															"type": "Expression"
														}
													},
													{
														"name": "GOLD_CONTAINER_NAME",
														"value": {
															"value": "@item().GOLD_CONTAINER_NAME",
															"type": "Expression"
														}
													},
													{
														"name": "GOLD_DIRECTORY",
														"value": {
															"value": "@item().GOLD_DIRECTORY",
															"type": "Expression"
														}
													},
													{
														"name": "GOLD_LOAD_TYPE",
														"value": {
															"value": "@item().GOLD_LOAD_TYPE",
															"type": "Expression"
														}
													},
													{
														"name": "PRIMARY_KEY_FIELDS",
														"value": {
															"value": "@item().PRIMARY_KEY_FIELDS",
															"type": "Expression"
														}
													}
												]
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azure_sql_table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().SCHEMA_NAME",
													"type": "Expression"
												},
												"objectName": {
													"value": "@item().OBJECT_NAME",
													"type": "Expression"
												},
												"databaseName": {
													"value": "@pipeline().parameters.sourceDatabaseName",
													"type": "Expression"
												},
												"serverName": {
													"value": "@pipeline().parameters.sourceServerFQDN",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azure_data_lake_store_object",
											"type": "DatasetReference",
											"parameters": {
												"storageAccountName": {
													"value": "@item().BRONZE_STORAGE_ACCOUNT_NAME",
													"type": "Expression"
												},
												"containerName": {
													"value": "@item().BRONZE_CONTAINER_NAME",
													"type": "Expression"
												},
												"directory": {
													"value": "@item().BRONZE_DIRECTORY",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(toLower(item().OBJECT_NAME), '.snappy.parquet')",
													"type": "Expression"
												},
												"extractionDate": {
													"value": "@pipeline().parameters.extractionDateTime",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourceServerFQDN": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					},
					"sourceDatabaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"extractionDateTime": {
						"type": "string",
						"defaultValue": "2021-06-22"
					}
				},
				"folder": {
					"name": "data-ingestion/Azure"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:42:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/metadata_objects_to_extract')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_lake_store_object')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest-api-data-ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy JSON Results to Data Lake Store",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "rest_api",
								"type": "DatasetReference",
								"parameters": {
									"baseURL": {
										"value": "@pipeline().parameters.baseURL",
										"type": "Expression"
									},
									"relativeURL": {
										"value": "@pipeline().parameters.relativeURL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_data_lake_store_object_json",
								"type": "DatasetReference",
								"parameters": {
									"storageAccountName": {
										"value": "@pipeline().parameters.storageAccountName",
										"type": "Expression"
									},
									"containerName": {
										"value": "@pipeline().parameters.containerName",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.directory",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"extractionDate": {
										"value": "@pipeline().parameters.extractionDate",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"extractionDate": {
						"type": "string",
						"defaultValue": "2021-08-25"
					},
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					},
					"containerName": {
						"type": "string",
						"defaultValue": "bronze"
					},
					"directory": {
						"type": "string",
						"defaultValue": "weather/"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "weather.json"
					},
					"baseURL": {
						"type": "string",
						"defaultValue": "https://atlas.microsoft.com/"
					},
					"relativeURL": {
						"type": "string",
						"defaultValue": "weather/currentConditions/json?subscription-key=8lSTicMGFukVS5LUfCG_8Ivq7q08YlGj5DBUZhC2nec&api-version=1.0&query=42.148735, -87.995445"
					}
				},
				"folder": {
					"name": "data-ingestion/REST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rest_api')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_lake_store_object_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_delimited_objects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azure_file_storage",
					"type": "LinkedServiceReference",
					"parameters": {
						"keyVaultSecretName": {
							"value": "@dataset().keyVaultSecretName",
							"type": "Expression"
						},
						"fileShare": {
							"value": "@dataset().fileShare",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"keyVaultSecretName": {
						"type": "string",
						"defaultValue": "andronpremfilesystem001d"
					},
					"fileShare": {
						"type": "string",
						"defaultValue": "files"
					},
					"directoryName": {
						"type": "string",
						"defaultValue": "/"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "Actors.csv"
					}
				},
				"folder": {
					"name": "source objects/Azure"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_file_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s3_delimited_objects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aws_s3_storage",
					"type": "LinkedServiceReference",
					"parameters": {
						"keyVaultName": {
							"value": "@dataset().keyVaultName",
							"type": "Expression"
						},
						"keyVaultS3AccessId": {
							"value": "@dataset().keyVaultS3AccessId",
							"type": "Expression"
						},
						"keyVaultS3AccessKey": {
							"value": "@dataset().keyVaultS3AccessKey",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"s3BucketName": {
						"type": "string",
						"defaultValue": "andronpremrentals001x"
					},
					"s3DirectoryName": {
						"type": "string",
						"defaultValue": "files"
					},
					"s3FileName": {
						"type": "string",
						"defaultValue": "Actors.csv"
					},
					"keyVaultName": {
						"type": "string",
						"defaultValue": "andrmoderdwkv001d"
					},
					"keyVaultS3AccessId": {
						"type": "string",
						"defaultValue": "s3accesskeyid"
					},
					"keyVaultS3AccessKey": {
						"type": "string",
						"defaultValue": "s3accesskey"
					}
				},
				"folder": {
					"name": "source objects/AWS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": {
							"value": "@dataset().s3BucketName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().s3DirectoryName",
							"type": "Expression"
						},
						"fileName": {
							"value": "@dataset().s3FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/aws_s3_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aws-s3-data-ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "s3_delimited_objects",
								"type": "DatasetReference",
								"parameters": {
									"s3BucketName": "andronpremrentals001x",
									"s3DirectoryName": "files",
									"s3FileName": "Actors.csv",
									"keyVaultName": {
										"value": "@pipeline().parameters.keyVaultName",
										"type": "Expression"
									},
									"keyVaultS3AccessId": "s3accesskeyid",
									"keyVaultS3AccessKey": "s3accesskey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_data_lake_store_object",
								"type": "DatasetReference",
								"parameters": {
									"storageAccountName": "andrdatalake001d",
									"containerName": "bronze",
									"directory": "southridge/cloudsales/addresses",
									"fileName": "addresses.snappy.parquet",
									"extractionDate": "2021-06-22"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"keyVaultName": {
						"type": "string",
						"defaultValue": "andrmoderdwkv001d"
					},
					"extractionDate": {
						"type": "string",
						"defaultValue": "2021-07-09"
					},
					"s3BucketName": {
						"type": "string",
						"defaultValue": "andronpremrentals001x"
					}
				},
				"folder": {
					"name": "data-ingestion/AWS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/s3_delimited_objects')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_lake_store_object')]"
			]
		}
	]
}